Import('env')

cgame_src = Split('''
cgame/cg_atmospheric.c
cgame/cg_character.c
cgame/cg_commandmap.c
cgame/cg_consolecmds.c
cgame/cg_debriefing.c
cgame/cg_draw.c
cgame/cg_drawtools.c
cgame/cg_drawCHS.c
cgame/cg_effects.c
cgame/cg_ents.c
cgame/cg_event.c
cgame/cg_fireteamoverlay.c
cgame/cg_fireteams.c
cgame/cg_flamethrower.c
cgame/cg_hardware.c
cgame/cg_info.c
cgame/cg_limbopanel.c
cgame/cg_loadpanel.c
cgame/cg_localents.c
cgame/cg_main.c
cgame/cg_marks.c
cgame/cg_missionbriefing.c
cgame/cg_multiview.c
cgame/cg_newDraw.c
cgame/cg_particles.c
cgame/cg_players.c
cgame/cg_playerstate.c
cgame/cg_polybus.c
cgame/cg_popupmessages.c
cgame/cg_predict.c
cgame/cg_scoreboard.c
cgame/cg_servercmds.c
cgame/cg_snapshot.c
cgame/cg_sound.c
cgame/cg_spawn.c
cgame/cg_statsranksmedals.c
cgame/cg_syscalls.c
cgame/cg_trails.c
cgame/cg_view.c
cgame/cg_weapons.c
cgame/cg_window.c
game/bg_animation.c
game/bg_animgroup.c
game/bg_character.c
game/bg_classes.c
game/bg_misc.c
game/bg_pmove.c
game/bg_slidemove.c
game/bg_sscript.c
game/bg_stats.c
game/bg_tracemap.c
game/q_math.c
game/q_shared.c
ui/ui_shared.c
sha-1/bg_sha.c
sha-1/sha1.c
''')

cgame_env = env.Clone()
cgame_env.Append(CPPDEFINES = ['CGAMEDLL'])
ret = cgame_env.SharedLibrary('cgame', cgame_src)
Return('ret')
